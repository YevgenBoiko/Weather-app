{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nconst useForecast = () => {\n  _s();\n  const [term, setTerm] = useState('');\n  const [city, setCity] = useState(null);\n  const [options, setOptions] = useState([]);\n  const [forecast, setForecast] = useState(null);\n  const getSearchOptions = value => {\n    fetch(`http://api.openweathermap.org/geo/1.0/direct?q=${value.trim()}&limit=5&appid=${process.env.REACT_APP_API_KEY}`).then(res => res.json()).then(data => setOptions(data));\n  };\n  const onInputChange = e => {\n    const value = e.target.value.trim();\n    setTerm(value);\n    if (value === '') return;\n    getSearchOptions(value);\n  };\n  const getForecast = city => {\n    fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${city.lat}&lon=${city.lon}&units=metric&appid=${process.env.REACT_APP_API_KEY}`).then(res => res.json()).then(data => {\n      console.log(data);\n      const forecastData = {\n        ...data.city,\n        list: data.list.slice(0, 16)\n      };\n      setForecast(forecastData);\n    });\n  };\n  const onSubmit = () => {\n    if (!city) return;\n    getForecast(city);\n  };\n  const onOptionSelect = option => {\n    setCity(option);\n  };\n  useEffect(() => {\n    if (city) {\n      setTerm(city.name);\n      setOptions([]);\n    }\n  }, [city]);\n  return {\n    term,\n    options,\n    forecast,\n    onInputChange,\n    onOptionSelect,\n    onSubmit\n  };\n};\n_s(useForecast, \"e32d+/vEJXra7VJZtjMUld4iZ60=\");\nexport default useForecast;","map":{"version":3,"names":["useEffect","useState","useForecast","_s","term","setTerm","city","setCity","options","setOptions","forecast","setForecast","getSearchOptions","value","fetch","trim","process","env","REACT_APP_API_KEY","then","res","json","data","onInputChange","e","target","getForecast","lat","lon","console","log","forecastData","list","slice","onSubmit","onOptionSelect","option","name"],"sources":["/Users/yevheniiboiko/Desktop/Weather-app/src/hooks/useForecast.tsx"],"sourcesContent":["import { ChangeEvent, useEffect, useState } from 'react'\nimport { optionType, forecastType } from '../types'\n\nconst useForecast = () => {\n  const [term, setTerm] = useState<string>('')\n  const [city, setCity] = useState<optionType | null>(null)\n  const [options, setOptions] = useState<[]>([])\n  const [forecast, setForecast] = useState<forecastType | null>(null)\n\n  const getSearchOptions = (value: string) => {\n    fetch(\n      `http://api.openweathermap.org/geo/1.0/direct?q=${value.trim()}&limit=5&appid=${\n        process.env.REACT_APP_API_KEY\n      }`\n    )\n      .then((res) => res.json())\n      .then((data) => setOptions(data))\n  }\n\n  const onInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.trim()\n    setTerm(value)\n\n    if (value === '') return\n\n    getSearchOptions(value)\n  }\n\n  const getForecast = (city: optionType) => {\n    fetch(\n      `https://api.openweathermap.org/data/2.5/weather?lat=${city.lat}&lon=${city.lon}&units=metric&appid=${process.env.REACT_APP_API_KEY}`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data)\n\n        const forecastData = {\n          ...data.city,\n          list: data.list.slice(0, 16),\n        }\n\n        setForecast(forecastData)\n      })\n  }\n\n  const onSubmit = () => {\n    if (!city) return\n    getForecast(city)\n  }\n\n  const onOptionSelect = (option: optionType) => {\n    setCity(option)\n  }\n\n  useEffect(() => {\n    if (city) {\n      setTerm(city.name)\n      setOptions([])\n    }\n  }, [city])\n\n  return { term, options, forecast, onInputChange, onOptionSelect, onSubmit }\n}\n\nexport default useForecast\n"],"mappings":";AAAA,SAAsBA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAGxD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAS,EAAE,CAAC;EAC5C,MAAM,CAACK,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAoB,IAAI,CAAC;EACzD,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAK,EAAE,CAAC;EAC9C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAsB,IAAI,CAAC;EAEnE,MAAMW,gBAAgB,GAAIC,KAAa,IAAK;IAC1CC,KAAK,CACF,kDAAiDD,KAAK,CAACE,IAAI,CAAC,CAAE,kBAC7DC,OAAO,CAACC,GAAG,CAACC,iBACb,EACH,CAAC,CACEC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKb,UAAU,CAACa,IAAI,CAAC,CAAC;EACrC,CAAC;EAED,MAAMC,aAAa,GAAIC,CAAgC,IAAK;IAC1D,MAAMX,KAAK,GAAGW,CAAC,CAACC,MAAM,CAACZ,KAAK,CAACE,IAAI,CAAC,CAAC;IACnCV,OAAO,CAACQ,KAAK,CAAC;IAEd,IAAIA,KAAK,KAAK,EAAE,EAAE;IAElBD,gBAAgB,CAACC,KAAK,CAAC;EACzB,CAAC;EAED,MAAMa,WAAW,GAAIpB,IAAgB,IAAK;IACxCQ,KAAK,CACF,uDAAsDR,IAAI,CAACqB,GAAI,QAAOrB,IAAI,CAACsB,GAAI,uBAAsBZ,OAAO,CAACC,GAAG,CAACC,iBAAkB,EACtI,CAAC,CACEC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACdO,OAAO,CAACC,GAAG,CAACR,IAAI,CAAC;MAEjB,MAAMS,YAAY,GAAG;QACnB,GAAGT,IAAI,CAAChB,IAAI;QACZ0B,IAAI,EAAEV,IAAI,CAACU,IAAI,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE;MAC7B,CAAC;MAEDtB,WAAW,CAACoB,YAAY,CAAC;IAC3B,CAAC,CAAC;EACN,CAAC;EAED,MAAMG,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAI,CAAC5B,IAAI,EAAE;IACXoB,WAAW,CAACpB,IAAI,CAAC;EACnB,CAAC;EAED,MAAM6B,cAAc,GAAIC,MAAkB,IAAK;IAC7C7B,OAAO,CAAC6B,MAAM,CAAC;EACjB,CAAC;EAEDpC,SAAS,CAAC,MAAM;IACd,IAAIM,IAAI,EAAE;MACRD,OAAO,CAACC,IAAI,CAAC+B,IAAI,CAAC;MAClB5B,UAAU,CAAC,EAAE,CAAC;IAChB;EACF,CAAC,EAAE,CAACH,IAAI,CAAC,CAAC;EAEV,OAAO;IAAEF,IAAI;IAAEI,OAAO;IAAEE,QAAQ;IAAEa,aAAa;IAAEY,cAAc;IAAED;EAAS,CAAC;AAC7E,CAAC;AAAA/B,EAAA,CA3DKD,WAAW;AA6DjB,eAAeA,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}